@{
    ViewData["Title"] = "Index";
}

<h1>Products</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table table-bordered table-striped" id="table-product">
    <thead class="thead-dark">
        <tr>
            <th>
                Description
            </th>
            <th>
                Price
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @* Old example
        @foreach (var item in Model)
        {
            <tr>
                
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }*@
    </tbody>
</table>

@section Scripts
{
    <script>
        const urlList = `@Url.Action("List", "Products")`;
        const urlEdit = `@Url.Action("Edit", "Products")`;
        const urlDetails = `@Url.Action("Details", "Products")`;
        const urlDelete = `@Url.Action("Delete", "Products")`;

        //$('#table-product').dataTable();
        $('#table-product').DataTable({
            serverSide: true,
            columns: [
                {
                    data: 'description',
                    visible: true,
                    searchable: true,
                    orderable: true,
                    name: 'Description'
                },
                {
                    data: 'price',
                    visible: true,
                    searchable: false,
                    orderable: true,
                    name: 'Price'
                },
                {
                    data: '__actions',
                    visible: true,
                    searchable: false,
                    orderable: false
                },
            ],
            columnDefs: [
                { className: 'td-text', orderable: true, targets: [0] },
                { className: 'td-numbers', orderable: true, targets: [1] },
                { className: 'td-icons', orderable: false, targets: [2] }
            ],
            ajax: {
                url: urlList,
                type: 'POST',
                dataSrc: (json) => {
                    let result = [];
                    for (let data of json.data) {

                        const actionsHtml = `
                            <a href="${urlEdit}/${data.id}">Edit</a> 
                            <a href="${urlDetails}/${data.id}">Details</a>
                            <a href="${urlDelete}/${data.id}">Delete</a>
                        `;

                        result.push(
                            { ...data, __actions: actionsHtml }
                        );
                    }

                    return result;
                }
            }
        });
    </script>
}